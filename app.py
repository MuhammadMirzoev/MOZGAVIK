import os, re, json, uuid
from typing import Any, Dict, List, Tuple
from fastapi import FastAPI, UploadFile, File, Request
from fastapi.responses import HTMLResponse, JSONResponse, FileResponse
from fastapi.middleware.cors import CORSMiddleware
from fastapi.staticfiles import StaticFiles
import httpx

# ---- –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: PyMuPDF –¥–ª—è PDF ----
fitz = None
try:
    import fitz as _fitz  # PyMuPDF
    fitz = _fitz
except Exception:
    pass

# =========================
#  –í–Ω–µ—à–Ω–∏–π API (–∏–≥—Ä–∞/—á–∞—Ç)
# =========================
APPROXINATION_TOKEN = os.getenv("APPROXINATION_TOKEN", "379f5469-cb64-47ec-bab1-462ee3824c1b")
API_URL = "https://approxination.com/v1/chat/completions"
HEADERS = {"Content-Type": "application/json", "Authorization": f"Bearer {APPROXINATION_TOKEN}"}

BASE_DIR = os.path.dirname(os.path.abspath(__file__))
UPLOAD_ROOT = os.path.join(BASE_DIR, "uploads")
SAMPLES_ROOT = os.path.join(BASE_DIR, "samples")
os.makedirs(UPLOAD_ROOT, exist_ok=True)
os.makedirs(SAMPLES_ROOT, exist_ok=True)

ALLOWED_UPLOADS = {"pdf", "epub", "fb2", "txt"}
CHUNK_LIMIT = 5  # –±—ã—Å—Ç—Ä—ã–π —Ä–∞–∑–±–æ—Ä –¥–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤

app = FastAPI(title="Reader + Game + GPT")
app.add_middleware(
    CORSMiddleware, allow_origins=["*"], allow_credentials=True, allow_methods=["*"], allow_headers=["*"]
)
app.mount("/static", StaticFiles(directory=BASE_DIR), name="static")


def redact(text: str) -> str:
    if not text: return text
    return re.sub(r'Bearer\s+[A-Za-z0-9\-\._]+', 'Bearer ***', str(text))[:4000]


def _allowed_file(name: str) -> bool:
    return "." in name and name.rsplit(".", 1)[1].lower() in ALLOWED_UPLOADS


def _request_timeout():
    flag = str(os.getenv("NO_TIMEOUT", "")).strip().lower()
    return None if flag in ("1", "true", "yes", "on") else None


# =========================
#  –ü—Ä–æ–º–ø—Ç –∏–≥—Ä—ã (–∫–∞–∫ —Ç—ã –ø—Ä–æ—Å–∏–ª)
# =========================
def build_prompt(book_text: str, opts: dict) -> str:
    """Constructs a styled, constrained prompt for the game generator."""
    vibe = opts.get("vibe", "neon")
    palette = opts.get("palette", "dark")
    difficulty = int(opts.get("difficulty", 60) or 60)
    game_type = opts.get("game_type", "quiz")  # –ü–û–õ–£–ß–ê–ï–ú –¢–ò–ü –ò–ì–†–´
    long_code = bool(opts.get("long_code", True))
    audio = bool(opts.get("audio", False))
    procedural = bool(opts.get("procedural", True))

    target_length = "–º–∏–Ω–∏–º—É–º 1000 —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞" if long_code else "—Å—Ç–æ–ª—å–∫–æ –∫–æ–¥–∞, —Å–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ –±–µ–∑ –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫"
    audio_line = "–î–æ–±–∞–≤—å –º—É–∑—ã–∫—É –∏ –∑–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã." if audio else "–ó–≤—É–∫ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω."
    proc_line = "–î–æ–±–∞–≤—å –ø—Ä–æ—Ü–µ–¥—É—Ä–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —É—Ä–æ–≤–Ω–µ–π, –µ—Å–ª–∏ —ç—Ç–æ —É–º–µ—Å—Ç–Ω–æ." if procedural else "–ü—Ä–æ—Ü–µ–¥—É—Ä–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –Ω–µ –¥–æ–±–∞–≤–ª—è–π."
    detail_hint = "–í—ã—Å–æ–∫–∞—è –Ω–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–π –∏ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤." if difficulty >= 66 else ("–£–º–µ—Ä–µ–Ω–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏." if difficulty >= 33 else "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏, –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî —á–∏—Ç–∞–µ–º–æ—Å—Ç—å.")

    # –û–ü–ò–°–ê–ù–ò–ï –¢–ò–ü–û–í –ò–ì–†
    game_type_descriptions = {
        "quiz": "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∫–≤–∏–∑ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –ø–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é –∫–Ω–∏–≥–∏",
        "dialog": "–î–∏–∞–ª–æ–≥–æ–≤–∞—è –∏–≥—Ä–∞ —Å –≤—ã–±–æ—Ä–æ–º —Ä–µ–ø–ª–∏–∫ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ–º —Å—é–∂–µ—Ç–∞",
        "novel": "–í–∏–∑—É–∞–ª—å–Ω–∞—è –Ω–æ–≤–µ–ª–ª–∞ —Å –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ–º –∏ –∫–ª—é—á–µ–≤—ã–º–∏ –≤—ã–±–æ—Ä–∞–º–∏",
        "platformer": "–ü–ª–∞—Ç—Ñ–æ—Ä–º–µ—Ä —Å –ø—Ä–µ–æ–¥–æ–ª–µ–Ω–∏–µ–º –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π –ø–æ –º–æ—Ç–∏–≤–∞–º —Å—é–∂–µ—Ç–∞",
        "arcade": "–î–∏–Ω–∞–º–∏—á–Ω–∞—è –∞—Ä–∫–∞–¥–∞, –æ—Ç—Ä–∞–∂–∞—é—â–∞—è –∫–ª—é—á–µ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è –∫–Ω–∏–≥–∏",
        "roguelike": "–†–æ–≥–∞–ª–∏–∫ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º —Ä–∞–∑–≤–∏—Ç–∏–µ–º"
    }

    game_type_instruction = game_type_descriptions.get(game_type, "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∫–≤–∏–∑ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –ø–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é –∫–Ω–∏–≥–∏")

    prompt = f"""
–¢—ã ‚Äî –º–∞—Å—Ç–µ—Ä —Å–æ–∑–¥–∞–Ω–∏—è **2D-–∏–≥—Ä** –Ω–∞ **JavaScript + HTML5 Canvas**.
–¢–µ–±–µ –¥–∞–Ω –æ—Ç—Ä—ã–≤–æ–∫ —Ç–µ–∫—Å—Ç–∞. –ü–æ –Ω–µ–º—É –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –º–∏–Ω–∏-–∏–≥—Ä—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –º–µ—Ö–∞–Ω–∏–∫–∏ –ø–æ–º–æ–≥–∞—é—Ç –ø–æ–Ω—è—Ç—å —Å–º—ã—Å–ª —Ç–µ–∫—Å—Ç–∞.

üé® –≠—Å—Ç–µ—Ç–∏–∫–∞/–≤–∞–π–±: **{vibe}**, –ø–∞–ª–∏—Ç—Ä–∞: **{palette}**. {detail_hint}
üéÆ –¢–∏–ø –∏–≥—Ä—ã: **{game_type_instruction}**.

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∏–≥—Ä–µ:
1) –ú–µ—Ö–∞–Ω–∏–∫–∞ –Ω–∞–ø—Ä—è–º—É—é –æ—Ç—Ä–∞–∂–∞–µ—Ç –∏–¥–µ–∏/—Å—é–∂–µ—Ç/–ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π —Ç–µ–∫—Å—Ç–∞.
2) –£ –∏–≥—Ä—ã –µ—Å—Ç—å —Ü–µ–ª—å –∏ ¬´—Ñ–∏–Ω–∏—à¬ª, –≥–¥–µ –∏–≥—Ä–æ–∫ —è–≤–Ω–æ —É—Å–≤–∞–∏–≤–∞–µ—Ç –∫–ª—é—á–µ–≤—É—é –º—ã—Å–ª—å.
3) –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤–∫–ª—é—á–∞–µ—Ç:
   - –°—á—ë—Ç—á–∏–∫ –æ—á–∫–æ–≤
   - –ö–Ω–æ–ø–∫—É ¬´–°—Ç–æ–ø¬ª
   - –ö–Ω–æ–ø–∫—É ¬´–í—ã—Ö–æ–¥¬ª
   - –ü–æ–¥—Å–∫–∞–∑–∫–∏
   - –≠–∫—Ä–∞–Ω –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å —Ñ–∏–Ω–∞–ª—å–Ω—ã–º —Å—á—ë—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–æ–π ¬´–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞¬ª
4) –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ö–æ–ª—Å—Ç–∞ —Ñ–æ—Ä–º–∞—Ç—É **1:1**.
5) –¢–µ–∫—Å—Ç–æ–≤—ã–µ –±–ª–æ–∫–∏ –¥–æ–ª–∂–Ω—ã **–≤–º–µ—â–∞—Ç—å—Å—è** –≤ –æ—Ç–≤–µ–¥—ë–Ω–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏ –∏ –≤—ã–≥–ª—è–¥–µ—Ç—å –æ–ø—Ä—è—Ç–Ω–æ (–±–µ–∑ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–π).
6) –î–æ–±–∞–≤—å –ø–ª–∞–≤–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏, –∞–∫–∫—É—Ä–∞—Ç–Ω—É—é —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫—É –∏ —Å–µ—Ç–∫—É. {audio_line}
7) {proc_line}
8) –ö–æ–¥ ‚Äî **—á–∏—Å—Ç—ã–π HTML + JS + Canvas**, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–∫ `game.html` –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ.
9) –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å, –æ—Ç–∑—ã–≤—á–∏–≤–æ—Å—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –ø–æ–Ω—è—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞.
10) –í—ã–¥–∞–π {target_length}. –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é—Ç—Å—è, –Ω–æ –±–µ–∑ ¬´–≤–æ–¥—ã¬ª.
11) –°—Ç–∏–ª—å –∏–≥—Ä—ã: {game_type_instruction}

–í–∞–∂–Ω–æ:
- –ï—Å–ª–∏ –µ—Å—Ç—å —Å–æ–±–∏—Ä–∞–µ–º—ã–µ –æ–±—ä–µ–∫—Ç—ã ‚Äî –¥–µ–ª–∞–π –∏—Ö –¥–æ—Å—Ç–∏–∂–∏–º—ã–º–∏.
- –ù–µ –ª–æ–º–∞–π –≤–µ—Ä—Å—Ç–∫—É: –Ω–∏—á–µ–≥–æ –Ω–µ –¥–æ–ª–∂–Ω–æ ¬´–µ—Ö–∞—Ç—å¬ª.
- –ò—Å–ø–æ–ª—å–∑—É–π –µ–¥–∏–Ω—ã–π —Å—Ç–∏–ª—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (–∫–Ω–æ–ø–∫–∏, –ø–∞–Ω–µ–ª–∏, –æ–≤–µ—Ä–ª–µ–∏).
- –ò–∑–±–µ–≥–∞–π –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π, –≤—Å—ë ‚Äî –≤ –æ–¥–Ω–æ–º HTML.

____________________________________________________________

–¢–ï–ö–°–¢ –î–õ–Ø –ò–ì–†–´:
{book_text}

____________________________________________________________

–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π **—á–∏—Å—Ç—ã–π HTML** (–±–µ–∑ –ø—Ä–µ—Ñ–∏–∫—Å–æ–≤/–æ–±—ä—è—Å–Ω–µ–Ω–∏–π), –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤—ã–π –∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—é –∫–∞–∫ `game.html`.
"""
    return prompt


# =========================
#  –†–∞–∑–±–æ—Ä —Ç–µ–∫—Å—Ç–∞
# =========================
def _pdf_to_text_chunks(pdf_path: str, max_chars: int = 16000) -> List[str]:
    if not fitz:
        raise RuntimeError("PyMuPDF –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (pip install pymupdf)")
    doc = fitz.open(pdf_path)
    buf, chunks, size = [], [], 0
    for page in doc:
        t = page.get_text("text")
        if size + len(t) > max_chars and size > 0:
            chunks.append("".join(buf)); buf, size = [t], len(t)
        else:
            buf.append(t); size += len(t)
    if buf: chunks.append("".join(buf))
    return chunks


def _simple_pages(text: str, page_chars: int = 1200) -> List[str]:
    paras = [p.strip() for p in re.split(r"\n{2,}", text) if p.strip()]
    pages, buf, size = [], [], 0
    for p in paras:
        if size + len(p) > page_chars and size > 0:
            pages.append("\n\n".join(buf)); buf, size = [p], len(p)
        else:
            buf.append(p); size += len(p)
    if buf: pages.append("\n\n".join(buf))
    return pages


# =========================
#  –°—ç–º–ø–ª—ã (3 –∫–Ω–∏–≥–∏, –ø–æ 3+ –≥–ª–∞–≤—ã)
# =========================
# =========================
#  –°—ç–º–ø–ª—ã (—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –Ω–∞–±–æ—Ä)
# =========================
SAMPLE_DOCS = {
    # 1) –õ–ò–¢–ï–†–ê–¢–£–†–ê (–±—ã–ª–æ)
    "night_tram": {
        "title": "–ù–æ—á–Ω–æ–π —Ç—Ä–∞–º–≤–∞–π",
        "size": "1.1 MB",
        "meta": "–ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ ‚Ä¢ –ø—Ä–∏–º–µ—Ä",
        "chapters": [
            {
                "title": "–ì–ª–∞–≤–∞ 1. –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–µ–π—Å",
                "text": (
                    "–ì–æ—Ä–æ–¥ –≤—ã–¥–æ—Ö—Å—è –∏ –∑–∞—Ç–∏—Ö, –∫–æ–≥–¥–∞ —Ç—Ä–∞–º–≤–∞–π —Å –Ω–æ–º–µ—Ä–æ–º 7 —Å–æ—Ä–≤–∞–ª—Å—è —Å –æ—Å—Ç–∞–Ω–æ–≤–∫–∏. "
                    "–í —Å–∞–ª–æ–Ω–µ –æ—Å—Ç–∞–ª–∏—Å—å —Ç–æ–ª—å–∫–æ –¥–≤–æ–µ: –≤–æ–¥–∏—Ç–µ–ª—å –∏ –ø–∞—Å—Å–∞–∂–∏—Ä —Å —á–µ–º–æ–¥–∞–Ω–æ–º, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –≤—ã—Ü–≤–µ–ª–∞ –Ω–∞–∫–ª–µ–π–∫–∞ '–î–æ–º'. "
                    "–†–µ–ª—å—Å—ã –ø–µ–ª–∏, –∫–∞–∫ —Å—Ç—Ä—É–Ω—ã, –∏ –∏—Ö –ø–µ–Ω–∏–µ –≥–æ–≤–æ—Ä–∏–ª–æ –æ —Ä–∞–∑–≤–∏–ª–∫–∞—Ö, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ –º–∏–Ω–æ–≤–∞—Ç—å."
                ),
                "sections": []
            },
            {
                "title": "–ì–ª–∞–≤–∞ 2. –ü–∞—Å—Å–∞–∂–∏—Ä—ã –ø–∞–º—è—Ç–∏",
                "text": (
                    "–ù–∞ —Å–ª–µ–¥—É—é—â–µ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –≤–æ—à–ª–∞ –∂–µ–Ω—â–∏–Ω–∞ —Å –ø–∏—Å—å–º–æ–º. –û–Ω–∞ –Ω–µ —Å–º–æ—Ç—Ä–µ–ª–∞ –ø–æ —Å—Ç–æ—Ä–æ–Ω–∞–º, "
                    "—Ç–æ–ª—å–∫–æ —Å—Ç–∏—Å–∫–∏–≤–∞–ª–∞ –∫–æ–Ω–≤–µ—Ä—Ç. –í –æ–∫–Ω–∞—Ö –ø—Ä–æ–º–µ–ª—å–∫–Ω—É–ª–∏ –¥–≤–æ—Ä—ã –¥–µ—Ç—Å—Ç–≤–∞, –∏ –ø–∞—Å—Å–∞–∂–∏—Ä —Å —á–µ–º–æ–¥–∞–Ω–æ–º —É–ª—ã–±–Ω—É–ª—Å—è, "
                    "–≤–ø–µ—Ä–≤—ã–µ –∑–∞–º–µ—Ç–∏–≤, —á—Ç–æ –ø–æ–µ–∑–¥–∫–∞ –≤–µ–¥—ë—Ç –Ω–µ –ø–æ —É–ª–∏—Ü–∞–º, –∞ –ø–æ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è–º."
                ),
                "sections": []
            },
            {
                "title": "–ì–ª–∞–≤–∞ 3. –†–∞–∑–≤–µ—Ç–≤–ª–µ–Ω–∏–µ –ø—É—Ç–µ–π",
                "text": (
                    "–£ –ø–∞—Ä–∫–∞ —Ä–µ–ª—å—Å—ã —Ä–∞–∑–¥–≤–æ–∏–ª–∏—Å—å. –õ–µ–≤–∞—è –≤–µ—Ç–∫–∞ –æ–±–µ—â–∞–ª–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ, –ø—Ä–∞–≤–∞—è ‚Äî –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ—Å—Ç—å. "
                    "–¢—Ä–∞–º–≤–∞–π –∑–∞–º–µ–¥–ª–∏–ª —Ö–æ–¥, –æ–∂–∏–¥–∞—è —Ä–µ—à–µ–Ω–∏—è. –ü–∞—Å—Å–∞–∂–∏—Ä—ã –ø–æ–¥–Ω—è–ª–∏—Å—å, –∫–∞–∫ –Ω–∞ –ø–µ—Ä–µ–∫–ª–∏—á–∫–µ, –∏ –∫–∞–∂–¥—ã–π –≤—ã–±—Ä–∞–ª "
                    "—Å–≤–æ—é —Å—Ç–æ—Ä–æ–Ω—É ‚Äî –Ω–æ –≤–∞–≥–æ–Ω –º–æ–≥ –∏–¥—Ç–∏ —Ç–æ–ª—å–∫–æ –ø–æ –æ–¥–Ω–æ–π."
                ),
                "sections": []
            },
        ],
        "conspect": [
            "–ú–æ—Ç–∏–≤ –ø—É—Ç–∏ –∏ –≤—ã–±–æ—Ä–∞, —Ç—Ä–∞–º–≤–∞–π –∫–∞–∫ –º–µ—Ç–∞—Ñ–æ—Ä–∞ –ø–∞–º—è—Ç–∏",
            "–ü–µ—Ä–µ—Ö–æ–¥ –æ—Ç –≤–Ω–µ—à–Ω–µ–≥–æ –≥–æ—Ä–æ–¥–∞ –∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º –ª–∞–Ω–¥—à–∞—Ñ—Ç–∞–º –≥–µ—Ä–æ—è",
            "–†–∞–∑–≤–∏–ª–∫–∞ –∫–∞–∫ –∫—É–ª—å–º–∏–Ω–∞—Ü–∏—è: –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ vs –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ—Å—Ç—å"
        ],
        "qa": []
    },

    # 2) –ò–ò (–±—ã–ª–æ)
    "ml_basics": {
        "title": "–û—Å–Ω–æ–≤—ã –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è",
        "size": "1.8 MB",
        "meta": "–ò–ò ‚Ä¢ –ø—Ä–∏–º–µ—Ä",
        "chapters": [
            {
                "title": "–ì–ª–∞–≤–∞ 1. –ü–∞—Ä–∞–¥–∏–≥–º—ã",
                "text": "–ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º–æ–µ, –Ω–µ–∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º–æ–µ –∏ –æ–±—É—á–µ–Ω–∏–µ —Å –ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω–∏–µ–º ‚Äî —Ç—Ä–∏ –±–∞–∑–æ–≤—ã–µ –ø–∞—Ä–∞–¥–∏–≥–º—ã ML. "
                        "–ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º–æ–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ä–∞–∑–º–µ—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ; –Ω–µ–∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º–æ–µ –∏—â–µ—Ç —Å–∫—Ä—ã—Ç—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É; RL –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç –ø–æ–ª–∏—Ç–∏–∫—É –Ω–∞–≥—Ä–∞–¥—ã.",
                "sections": []
            },
            {
                "title": "–ì–ª–∞–≤–∞ 2. –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∏ –º–æ–¥–µ–ª–∏",
                "text": "–õ–∏–Ω–µ–π–Ω—ã–µ –º–æ–¥–µ–ª–∏, –¥–µ—Ä–µ–≤—å—è —Ä–µ—à–µ–Ω–∏–π, –∞–Ω—Å–∞–º–±–ª–∏, –Ω–µ–π—Ä–æ—Å–µ—Ç–∏. –ë–∞–ª–∞–Ω—Å —Å–º–µ—â–µ–Ω–∏—è –∏ –¥–∏—Å–ø–µ—Ä—Å–∏–∏. "
                        "–†–µ–≥—É–ª—è—Ä–∏–∑–∞—Ü–∏—è (L2, dropout) –∏ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —É–ª—É—á—à–∞—é—Ç –æ–±–æ–±—â–∞—é—â—É—é —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å.",
                "sections": []
            },
            {
                "title": "–ì–ª–∞–≤–∞ 3. –û—Ü–µ–Ω–∫–∞ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è",
                "text": "–†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ train/valid/test, –∫—Ä–æ—Å—Å-–≤–∞–ª–∏–¥–∞—Ü–∏—è, –º–µ—Ç—Ä–∏–∫–∏ (Accuracy, Precision/Recall, ROC-AUC, F1). "
                        "–õ–∏–∫ —É—Ç–µ—á–∫–∏, –ø–æ–¥–±–æ—Ä –≥–∏–ø–µ—Ä–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ –ø—Ä–æ–¥–µ.",
                "sections": []
            },
        ],
        "conspect": [
            "–¢—Ä–∏ –ø–∞—Ä–∞–¥–∏–≥–º—ã ML –∏ –∏—Ö –∑–∞–¥–∞—á–∏",
            "–í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ = –∫–æ–º–ø—Ä–æ–º–∏—Å—Å bias/variance",
            "–û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞: –≤–∞–ª–∏–¥–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –∏ —á–µ—Å—Ç–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è",
            "–ü—Ä–æ–¥-–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –¥–µ–≥—Ä–∞–¥–∞—Ü–∏—é"
        ],
        "qa": []
    },

    # 3) –õ–û–† –ò–ì–†–´ (–±—ã–ª–æ)
    "light_shards": {
        "title": "–û—Å–∫–æ–ª–∫–∏ —Å–≤–µ—Ç–∞",
        "size": "1.3 MB",
        "meta": "–∏–≥—Ä–æ–≤–æ–π –ª–æ—Ä ‚Ä¢ –ø—Ä–∏–º–µ—Ä",
        "chapters": [
            {
                "title": "–ì–ª–∞–≤–∞ 1. –ú–∏—Ä, —Ä–∞–∑–±–∏—Ç—ã–π –Ω–∞ –æ—Å–∫–æ–ª–∫–∏",
                "text": "–ö–æ–≥–¥–∞ –°–µ—Ä–¥—Ü–µ –ì–æ—Ä–æ–¥–∞ —Ç—Ä–µ—Å–Ω—É–ª–æ, —Å–≤–µ—Ç —Ä–∞—Å—Å—ã–ø–∞–ª—Å—è –ø–æ —Ä–∞–π–æ–Ω–∞–º. "
                        "–ö–∞–∂–¥—ã–π –æ—Å–∫–æ–ª–æ–∫ —Ö—Ä–∞–Ω–∏—Ç —ç–º–æ—Ü–∏—é ‚Äî –æ—Ç —Ä–∞–¥–æ—Å—Ç–∏ –¥–æ –æ—Ç—á–∞—è–Ω–∏—è ‚Äî –∏ –º–µ–Ω—è–µ—Ç —É–ª–∏—Ü—ã –≤–æ–∫—Ä—É–≥.",
                "sections": []
            },
            {
                "title": "–ì–ª–∞–≤–∞ 2. –ü—É—Ç–µ–≤–æ–¥–Ω—ã–π –º–∞—è–∫",
                "text": "–ü–æ –ª–µ–≥–µ–Ω–¥–µ, –æ—Å–∫–æ–ª–∫–∏ –º–æ–∂–Ω–æ —Å–æ–±—Ä–∞—Ç—å, —Å–ª–µ–¥—É—è –≠—Ö–æ ‚Äî –∑–≤—É–∫—É, –∫–æ—Ç–æ—Ä—ã–π —Å–ª—ã—à–∏—Ç —Ç–æ–ª—å–∫–æ –ò—Å–∫–∞—Ç–µ–ª—å. "
                        "–ù–æ —á–µ–º –±–ª–∏–∂–µ –∫ –°–µ—Ä–¥—Ü—É, —Ç–µ–º —Å–∏–ª—å–Ω–µ–µ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ –Ω–æ—á–∏.",
                "sections": []
            },
            {
                "title": "–ì–ª–∞–≤–∞ 3. –°–ª–∏—è–Ω–∏–µ",
                "text": "–í—Å–µ –æ—Å–∫–æ–ª–∫–∏ —Å—Ö–æ–¥—è—Ç—Å—è –≤ –ö–∞—Ñ–µ–¥—Ä–∞–ª—å–Ω–æ–π –ü–ª–æ—â–∞–¥–∏. –°–ª–∏—è–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–æ—Ä–æ–¥—É —Ü–≤–µ—Ç, "
                        "–Ω–æ –≤—ã–±–æ—Ä –ò—Å–∫–∞—Ç–µ–ª—è –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∫–∞–∫–æ–π —ç–º–æ—Ü–∏–µ–π –±—É–¥–µ—Ç –ø—É–ª—å—Å–∏—Ä–æ–≤–∞—Ç—å —Ü–µ–Ω—Ç—Ä.",
                "sections": []
            },
        ],
        "conspect": [
            "–ú–∏—Ä –º–µ–Ω—è–µ—Ç—Å—è –ø–æ–¥ –≤–ª–∏—è–Ω–∏–µ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –æ—Å–∫–æ–ª–∫–æ–≤",
            "–ò—Å–∫–∞—Ç–µ–ª—å –æ—Ä–∏–µ–Ω—Ç–∏—Ä—É–µ—Ç—Å—è –ø–æ –≠—Ö–æ —Å–≤–µ—Ç–∞",
            "–§–∏–Ω–∞–ª—å–Ω–æ–µ –°–ª–∏—è–Ω–∏–µ –∑–∞–¥–∞—ë—Ç —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏—é –≥–æ—Ä–æ–¥–∞"
        ],
        "qa": []
    },

    # 4) –ù–û–í–û–ï ‚Äî –±–æ–ª—å—à–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω–∞—è
    "timeless_cathedral": {
        "title": "–°–æ–±–æ—Ä –±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏",
        "size": "2.7 MB",
        "meta": "–ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ ‚Ä¢ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø—Ä–∏–º–µ—Ä",
        "chapters": [
            {
                "title": "–ì–ª–∞–≤–∞ 1. –ù–∞–¥–ª–æ–º",
                "text": ("–°—Ç–∞—Ä—ã–π –≥–æ—Ä–æ–¥ —à–µ–≤–µ–ª–∏–ª—Å—è —Å–∫–≤–æ–∑—å —Ç—É–º–∞–Ω, —Å–ª–æ–≤–Ω–æ –∫—Ç–æ-—Ç–æ –ª–∏—Å—Ç–∞–ª –∞–ª—å–±–æ–º —Å –ø–æ–∂–µ–ª—Ç–µ–≤—à–∏–º–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏. "
                         "–ù–∞ –ø–ª–æ—â–∞–¥–∏, –≥–¥–µ —á–∞—Å—ã –¥–∞–≤–Ω–æ –ø–æ—Ç–µ—Ä—è–ª–∏ —Å—Ç—Ä–µ–ª–∫–∏, —Ä–∞—Å–ø–æ–ª–∞–≥–∞–ª—Å—è —Å–æ–±–æ—Ä ‚Äî –æ–Ω –Ω–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞–ª –Ω–∏ –≤–µ–∫—É, "
                         "–Ω–∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ–π —à–∫–æ–ª–µ. –ï–≥–æ —Å—Ç–µ–Ω—ã –ø–æ–º–Ω–∏–ª–∏ –±–æ–ª—å—à–µ, —á–µ–º –∂–∏—Ç–µ–ª–∏, –∞ —à—ë–ø–æ—Ç –∫–∞–º–Ω—è —Å–ª—ã—à–∞–ª–∏ –ª–∏—à—å —Ç–µ, "
                         "–∫—Ç–æ —É–º–µ–ª —Ä–∞–∑–ª–∏—á–∞—Ç—å –ø–∞—É–∑—ã –º–µ–∂–¥—É —É–¥–∞—Ä–∞–º–∏ —Å–µ—Ä–¥—Ü–∞. –í —Ç–æ—Ç –¥–µ–Ω—å –≤ –≥–æ—Ä–æ–¥ –≤–µ—Ä–Ω—É–ª–∞—Å—å –õ–µ—è, "
                         "—á—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å –¥–æ–º –∏ –∑–∞–±—ã—Ç—å. –ù–æ —É –≤—Ä–µ–º–µ–Ω–∏ –±—ã–ª–∏ –¥—Ä—É–≥–∏–µ –ø–ª–∞–Ω—ã."),
                "sections": []
            },
            {
                "title": "–ì–ª–∞–≤–∞ 2. –ü–ª–æ—â–∞–¥—å —ç—Ö",
                "text": ("–ì—É–ª —à–∞–≥–æ–≤ –º–Ω–æ–∂–∏–ª—Å—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞–ª—Å—è –∏–∑ –∞—Ä–æ–∫, –±—É–¥—Ç–æ –ø–ª–æ—â–∞–¥—å –ø—Ä–æ–≤–µ—Ä—è–ª–∞ –≥–æ—Å—Ç–µ–π –Ω–∞ –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç—å. "
                         "–õ–µ—è –Ω–∞—à–ª–∞ –ª–∞–≤–∫—É —á–∞—Å–æ–≤—â–∏–∫–∞ ‚Äî —Å—Ç–µ–∫–ª–æ –±—ã–ª–æ –∑–∞–ø–æ—Ç–µ–≤—à–∏–º –∏–∑–Ω—É—Ç—Ä–∏, –∞ –≤ –≤–∏—Ç—Ä–∏–Ω–µ –¥–≤–∏–≥–∞–ª–∏—Å—å –ø—Ä—É–∂–∏–Ω—ã, "
                         "–∫–æ—Ç–æ—Ä—ã–º –Ω–µ–∫–æ–º—É –±—ã–ª–æ –∑–∞–≤–æ–¥–∏—Ç—å –º–µ—Ö–∞–Ω–∏–∑–º—ã. \"–ó–¥–µ—Å—å –Ω–∏—á–µ–≥–æ –Ω–µ –ª–æ–º–∞–µ—Ç—Å—è –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ\", ‚Äî —Å–∫–∞–∑–∞–ª–∞ —Ö–æ–∑—è–π–∫–∞ –ª–∞–≤–∫–∏, "
                         "–∫–∞–∫ —Ç–æ–ª—å–∫–æ –õ–µ—è –≤–æ—à–ª–∞. ‚Äî \"–ó–¥–µ—Å—å –≤—Å—ë –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è\"."),
                "sections": []
            },
            {
                "title": "–ì–ª–∞–≤–∞ 3. –ü–æ–¥ —Å–≤–æ–¥–∞–º–∏",
                "text": ("–°–æ–±–æ—Ä –≤–ø—É—Å–∫–∞–ª –Ω–µ–æ—Ö–æ—Ç–Ω–æ. –í–Ω—É—Ç—Ä–∏ –≤–æ–∑–¥—É—Ö –±—ã–ª –≥—É—Å—Ç—ã–º, –∫–∞–∫ –º—ë–¥, –∏ –ø–∞—Ö —Å—Ç–∞—Ä—ã–º–∏ –∫–Ω–∏–≥–∞–º–∏. "
                         "–°–≤–µ—Ç –ø–∞–¥–∞–ª –∏–∑ –≤—ã—Å–æ–∫–∏—Ö –æ–∫–æ–Ω, —Ä–∞—Å–ø–∞–¥–∞—è—Å—å –Ω–∞ –ø–æ–ª–æ—Å—ã, –∏ –≤ —ç—Ç–∏—Ö –ø–æ–ª–æ—Å–∞—Ö –õ–µ—è —É–≤–∏–¥–µ–ª–∞ —Ñ–∏–≥—É—Ä—ã ‚Äî "
                         "—Å–∏–ª—É—ç—Ç—ã –¥–Ω–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –æ–Ω–∞ –ø—Ä–æ–∂–∏–ª–∞ –∏ –∑–∞–±—ã–ª–∞. –ö–∞–∂–¥—ã–π —à–∞–≥ –æ—Ç–∑—ã–≤–∞–ª—Å—è —Ö–æ—Ä–æ–º, –∏ —Ö–æ—Ä —Å–∫–ª–∞–¥—ã–≤–∞–ª—Å—è –≤ –º–µ–ª–æ–¥–∏—é –≤—ã–±–æ—Ä–∞: "
                         "–æ—Å—Ç–∞—Ç—å—Å—è –≤ –∑–∞—Å—Ç–µ–∫–ª—ë–Ω–Ω–æ–º –ø—Ä–æ—à–ª–æ–º –∏–ª–∏ —Ä–∏—Å–∫–Ω—É—Ç—å –∏ –æ—Ç–∫—Ä—ã—Ç—å –¥–≤–µ—Ä—å –≤ –Ω–µ–≤–µ–¥–æ–º–æ–µ –∫—Ä—ã–ª–æ."),
                "sections": []
            },
            {
                "title": "–ì–ª–∞–≤–∞ 4. –ß–∞—Å—ã –±–µ–∑ —Å—Ç—Ä–µ–ª–æ–∫",
                "text": ("–ù–∞ —Ö–æ—Ä–∞—Ö, –∫—É–¥–∞ –≤–µ–ª–∞ –≤–∏–Ω—Ç–æ–≤–∞—è –ª–µ—Å—Ç–Ω–∏—Ü–∞, —Å—Ç–æ—è–ª–∏ —á–∞—Å—ã. –£ –Ω–∏—Ö –Ω–µ –±—ã–ª–æ —Å—Ç—Ä–µ–ª–æ–∫, –Ω–æ –æ–Ω–∏ —Ç–∏–∫–∞–ª–∏, "
                         "—Å–ª–æ–≤–Ω–æ –∏–∑–º–µ—Ä—è–ª–∏ –Ω–µ –º–∏–Ω—É—Ç—ã, –∞ —Å–º–µ–ª–æ—Å—Ç—å. –ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–∏—Ç—å —É—Ö–æ, —Å–ª—ã—à–∞–ª—Å—è –æ—Ç–¥–∞–ª—ë–Ω–Ω—ã–π –º–æ—Ä—Å–∫–æ–π –ø—Ä–∏–±–æ–π, "
                         "—Ö–æ—Ç—è –º–æ—Ä—è –≤ –≥–æ—Ä–æ–¥–µ –Ω–µ –±—ã–ª–æ. –õ–µ—è –ø–æ–Ω—è–ª–∞: –∑–¥–µ—Å—å —Å—á–∏—Ç—ã–≤–∞—é—Ç –Ω–µ –≤—Ä–µ–º—è, –∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ‚Äî —Ç—É–¥–∞, "
                         "–≥–¥–µ –º—ã –µ—â—ë —Å–ø–æ—Å–æ–±–Ω—ã –º–µ–Ω—è—Ç—å—Å—è."),
                "sections": []
            },
            {
                "title": "–ì–ª–∞–≤–∞ 5. –ù–æ—á–Ω–æ–π —Ö–æ—Ä",
                "text": ("–í –ø–æ–ª–Ω–æ—á—å —Ö–æ—Ä –∑–∞–≥–æ–≤–æ—Ä–∏–ª. –ö–∞–º–µ–Ω—å —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–ª –∏—Å—Ç–æ—Ä–∏–∏ –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –æ–¥–Ω–∞–∂–¥—ã —Ä–µ—à–∞–ª–∏—Å—å "
                         "–Ω–µ –ø–æ–≤—Ç–æ—Ä—è—Ç—å —Å—Ç–∞—Ä–æ–µ. –ì–æ–ª–æ—Å–∞ –ø—É—Ç–∞–ª–∏—Å—å –∏ —Ä–∞—Å—Ö–æ–¥–∏–ª–∏—Å—å, –∞ –∑–∞—Ç–µ–º —Å–∫–ª–∞–¥—ã–≤–∞–ª–∏—Å—å –≤ –æ–¥–Ω—É —Ñ—Ä–∞–∑—É: "
                         "\"–í–µ—Ä–Ω—É—Ç—å—Å—è –º–æ–∂–Ω–æ –≤—Å–µ–≥–¥–∞. –í–ø–µ—Ä—ë–¥ ‚Äî —Ç–æ–ª—å–∫–æ —Å–µ–π—á–∞—Å\". –õ–µ—è —Å–º–æ—Ç—Ä–µ–ª–∞ –Ω–∞ –¥–≤–µ—Ä—å –≤ –Ω–æ–≤–æ–µ –∫—Ä—ã–ª–æ –∏ —á—É–≤—Å—Ç–≤–æ–≤–∞–ª–∞, "
                         "–∫–∞–∫ –ª—ë–≥–∫–∏–µ –Ω–∞–ø–æ–ª–Ω—è—é—Ç—Å—è –≤–æ–∑–¥—É—Ö–æ–º, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ø—Ä–æ—à–ª–æ–º—É."),
                "sections": []
            },
            {
                "title": "–ì–ª–∞–≤–∞ 6. –ö—É–ø–æ–ª",
                "text": ("–ü–æ–¥ –∫—É–ø–æ–ª–æ–º —Å–æ–±–æ—Ä–∞ —Ä–∞—Å—Å–≤–µ—Ç –±—ã–ª —Å–∞–º—ã–º —á–µ—Å—Ç–Ω—ã–º. –í —ç—Ç–æ–º —Å–≤–µ—Ç–µ –∏—Å—á–µ–∑–∞–ª–∞ –ø—ã–ª—å –æ–±–∏–¥, "
                         "–∏ —Å—Ç–∞–Ω–æ–≤–∏–ª–æ—Å—å –≤–∏–¥–Ω–æ, —á—Ç–æ –∫–∞–º–µ–Ω—å –Ω–µ –¥–µ—Ä–∂–∏—Ç, –∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç. –õ–µ—è –≤—ã—à–ª–∞ –Ω–∞ –ø–ª–æ—â–∞–¥—å –∏ –∑–∞–º–µ—Ç–∏–ª–∞, "
                         "—á—Ç–æ —á–∞—Å—ã‚Ä¶ –æ–±—Ä–µ–ª–∏ —Å—Ç—Ä–µ–ª–∫–∏. –û–Ω–∏ –ø–æ–∫–∞–∑—ã–≤–∞–ª–∏ –Ω–µ –≤—Ä–µ–º—è, –∞ –≤–µ–∫—Ç–æ—Ä. –û–Ω–∞ –ø–æ—à–ª–∞ —Ç—É–¥–∞, –∫—É–¥–∞ —É–∫–∞–∑—ã–≤–∞–ª–∏ —Å—Ç—Ä–µ–ª–∫–∏, "
                         "–∏ –≥–æ—Ä–æ–¥ –ø–µ—Ä–µ—Å—Ç–∞–ª —à—É—Ä—à–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ ‚Äî –æ–Ω –Ω–∞—á–∞–ª –≥–æ–≤–æ—Ä–∏—Ç—å –Ω–∞ –µ—ë —è–∑—ã–∫–µ."),
                "sections": []
            },
        ],
        "conspect": [
            "–°–æ–±–æ—Ä ‚Äî —Å–∏–º–≤–æ–ª –ø–∞–º—è—Ç–∏ –∏ –≤—ã–±–æ—Ä–∞; —á–∞—Å—ã –±–µ–∑ —Å—Ç—Ä–µ–ª–æ–∫ –º–µ—Ä—è—é—Ç ¬´–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ¬ª",
            "–ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ–≥–æ vs —Å–º–µ–ª–æ—Å—Ç—å –ø–µ—Ä–µ–º–µ–Ω",
            "–†–µ—à–µ–Ω–∏–µ –≥–µ—Ä–æ–∏–Ω–∏ ‚Äî –∏–¥—Ç–∏ –≤–ø–µ—Ä—ë–¥, –∞ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è"
        ],
        "qa": []
    },

    # 5) –ù–û–í–û–ï ‚Äî –±–æ–ª—å—à–∞—è –∫–Ω–∏–≥–∞ –ø—Ä–æ –ò–ò
    "nn_in_production": {
        "title": "–ù–µ–π—Ä–æ—Å–µ—Ç–∏ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ",
        "size": "3.1 MB",
        "meta": "–ò–ò ‚Ä¢ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø—Ä–∏–º–µ—Ä",
        "chapters": [
            {
                "title": "–ì–ª–∞–≤–∞ 1. –î–∞–Ω–Ω—ã–µ –∏ –∫–æ–Ω–≤–µ–π–µ—Ä—ã",
                "text": ("–ù–∞–¥—ë–∂–Ω—ã–π –ø—Ä–æ–¥–∞–∫—à–µ–Ω –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –¥–∞–Ω–Ω—ã—Ö. –í–∞–∂–Ω—ã —Å—Ö–µ–º—ã, –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ç–µ—Å—Ç—ã –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å. "
                         "–ö–æ–Ω–≤–µ–π–µ—Ä—ã —Å—Ç—Ä–æ—è—Ç—Å—è –≤–æ–∫—Ä—É–≥ –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π, –∞ —Å—ã—Ä—å—ë ‚Äî –≤–æ–∫—Ä—É–≥ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤. "
                         "–§–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞–±–æ—Ä—ã –∏ –¥–∞—Ç–∞-–∫–∞—Ç–∞–ª–æ–≥–∏ —É–º–µ–Ω—å—à–∞—é—Ç —Å—é—Ä–ø—Ä–∏–∑—ã –∏ –¥–µ–ª–∞—é—Ç –æ–±—É—á–µ–Ω–∏–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º—ã–º."),
                "sections": []
            },
            {
                "title": "–ì–ª–∞–≤–∞ 2. –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è",
                "text": ("–í—ã–±–æ—Ä –º–µ–∂–¥—É CNN, RNN, —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–µ—Ä–∞–º–∏ –∏ —Å–º–µ—à–∞–Ω–Ω—ã–º–∏ –ø–æ–¥—Ö–æ–¥–∞–º–∏ –¥–∏–∫—Ç—É–µ—Ç—Å—è –∑–∞–¥–∞—á–µ–π –∏ –±—é–¥–∂–µ—Ç–æ–º. "
                         "–í–∞–∂–Ω–µ–µ –Ω–µ –º–æ–¥–µ–ª—å, –∞ —Å–ø–æ—Å–æ–± –∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç–Ω—É—é –æ–±–ª–∞—Å—Ç—å: –ø—Ä–∏–∑–Ω–∞–∫–∏, —Ç–æ–∫–µ–Ω–∏–∑–∞—Ü–∏—è, —ç–º–±–µ–¥–¥–∏–Ω–≥–∏. "
                         "–•–æ—Ä–æ—à–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç —ç–≤–æ–ª—é—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –±–µ–∑ –ø–æ–ª–Ω–æ–π –ø–µ—Ä–µ—Å—Ç—Ä–æ–π–∫–∏ –ø–∞–π–ø–ª–∞–π–Ω–∞."),
                "sections": []
            },
            {
                "title": "–ì–ª–∞–≤–∞ 3. –û–±—É—á–µ–Ω–∏–µ –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞",
                "text": ("–ß–µ—Å—Ç–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –∏—Å–∫–ª—é—á–∞–µ—Ç —É—Ç–µ—á–∫–∏. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç—á—ë—Ç—ã —Å—Ä–∞–≤–Ω–∏–≤–∞—é—Ç –º–µ—Ç—Ä–∏–∫–∏ –ø–æ —Ä–µ–ª–∏–∑–∞–º; "
                         "—Ä–µ–≥—Ä–µ—Å—Å–∏–∏ –ª–æ–≤—è—Ç –¥–æ –≤—ã–∫–∞—Ç–∞. –û–±—É—á–µ–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç—Å—è –ø–æ –∫—Ä–∏–≤—ã–º –ø–æ—Ç–µ—Ä—å –∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è–º –ø—Ä–∏–∑–Ω–∞–∫–æ–≤, "
                         "–∞ –≥–∏–ø–µ—Ä–ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ª–æ–≥–∏—Ä—É—é—Ç—Å—è –≤–º–µ—Å—Ç–µ —Å –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º."),
                "sections": []
            },
            {
                "title": "–ì–ª–∞–≤–∞ 4. –î–µ–ø–ª–æ–π–º–µ–Ω—Ç –∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞",
                "text": ("–û–Ω–ª–∞–π–Ω-–∏–Ω—Ñ–µ—Ä–µ–Ω—Å, –±–∞—Ç—á-–ø—Ä–æ—Ü–µ—Å—Å—ã –∏ —Å—Ç—Ä–∏–º–∏–Ω–≥ —Ç—Ä–µ–±—É—é—Ç —Ä–∞–∑–Ω—ã—Ö SLA. "
                         "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏—è, —Ç—Ä–∏—Ç–æ–Ω/onnx/torchserve, –∞–≤—Ç–æ-—Å–∫–µ–π–ª, –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤. "
                         "–ö–∞—Ç–∞–ª–æ–≥–∏ –º–æ–¥–µ–ª–µ–π –∏ —Å–µ—Ä—ã–µ –≤—ã–∫–∞—Ç—ã –ø–æ–∑–≤–æ–ª—è—é—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —Ä–∏—Å–∫–∞–º–∏."),
                "sections": []
            },
            {
                "title": "–ì–ª–∞–≤–∞ 5. –ù–∞–±–ª—é–¥–∞–µ–º–æ—Å—Ç—å –∏ –¥–µ–≥—Ä–∞–¥–∞—Ü–∏–∏",
                "text": ("–î—Ä–∏—Ñ—Ç –¥–∞–Ω–Ω—ã—Ö –∏ –¥—Ä–∏—Ñ—Ç –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ –≤—ã—è–≤–ª—è—é—Ç—Å—è –∑–∞ —Å—á—ë—Ç —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π, PSI/JS-–¥–∏–≤–µ—Ä–≥–µ–Ω—Ü–∏–π –∏ –∫–∞–Ω–∞—Ä–µ–µ—á–Ω—ã—Ö –Ω–∞–±–æ—Ä–æ–≤. "
                         "–ê–ª–µ—Ä—Ç—ã —Ç—Ä–∏–≥–≥–µ—Ä—è—Ç—Å—è –ø–æ –º–µ—Ç—Ä–∏–∫–∞–º –∫–∞—á–µ—Å—Ç–≤–∞ –∏ –ª–∞—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏. –í–∞–∂–Ω–æ —É–º–µ—Ç—å –±—ã—Å—Ç—Ä–æ –æ—Ç–∫–∞—Ç—ã–≤–∞—Ç—å—Å—è –∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å –ø—Ä–æ—à–ª—ã–π –∑–∞–ø—É—Å–∫."),
                "sections": []
            },
            {
                "title": "–ì–ª–∞–≤–∞ 6. –ü–µ—Ä–µ–æ–±—É—á–µ–Ω–∏–µ –Ω–∞ –ª–µ—Ç—É",
                "text": ("–ö–æ–Ω—Ç—É—Ä –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ ‚Äî —Å–±–æ—Ä —Ñ–∏–¥–±—ç–∫–∞, —Å–ª–∞–±–∞—è —Ä–∞–∑–º–µ—Ç–∫–∞, –∞–∫—Ç–∏–≤–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ. "
                         "–ü–æ–≤—Ç–æ—Ä–Ω–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é, warm-start –∏ –∑–∞—â–∏—Ç–∞ –æ—Ç —Ä–µ–≥—Ä–µ—Å—Å–∏–π. "
                         "–û—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏—è: Airflow/Argo + —Ñ–∏—á–µ—Å—Ç–æ—Ä + —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤."),
                "sections": []
            },
        ],
        "conspect": [
            "–î–∞–Ω–Ω—ã–µ –∏ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã ‚Äî —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç–∏",
            "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –ø–æ–¥ –∑–∞–¥–∞—á—É –∏ –±—é–¥–∂–µ—Ç, —ç–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–æ—Å—Ç—å",
            "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–∞—á–µ—Å—Ç–≤–∞ –∏ –¥—Ä–∏—Ñ—Ç–∞, –±—ã—Å—Ç—Ä—ã–π –æ—Ç–∫–∞—Ç",
            "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∏—è –∏ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏—è"
        ],
        "qa": []
    },

    # 6) –ù–û–í–û–ï ‚Äî –±–æ–ª—å—à–∞—è –∫–Ω–∏–≥–∞ –ª–æ—Ä–∞ –∏–≥—Ä—ã
    "ventus_keep": {
        "title": "–ü–µ—Å–Ω—å –∑–∞–º–∫–∞ –í–µ–Ω—Ç—É—Å",
        "size": "2.9 MB",
        "meta": "–∏–≥—Ä–æ–≤–æ–π –ª–æ—Ä ‚Ä¢ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø—Ä–∏–º–µ—Ä",
        "chapters": [
            {
                "title": "–ì–ª–∞–≤–∞ 1. –í–µ—Ç–µ—Ä —É –≤–æ—Å—Ç–æ—á–Ω–æ–π —Å—Ç–µ–Ω—ã",
                "text": ("–ó–∞–º–æ–∫ –í–µ–Ω—Ç—É—Å –ø–æ—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –≥—Ä–µ–±–Ω–µ, –≥–¥–µ –≤–µ—Ç—Ä–∞ –ø–æ—é—Ç –Ω–∞ –≤—Å–µ—Ö —è–∑—ã–∫–∞—Ö. "
                         "–ö–æ–≥–¥–∞-—Ç–æ —Ç–∞–º —Å—Ç–æ—è–ª–∞ –±–∞—à–Ω—è –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª–µ–π, —Ç–µ–ø–µ—Ä—å ‚Äî –º–∞—è–∫ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –ø–æ—Ç–µ—Ä—è–ª –∫–∞—Ä—Ç—É. "
                         "–ì–æ–≤–æ—Ä—è—Ç, —á—Ç–æ –µ—Å–ª–∏ –ø—Ä–∏—Å–ª–æ–Ω–∏—Ç—å—Å—è —É—Ö–æ–º –∫ –∫–∞–º–Ω—é, –º–æ–∂–Ω–æ —É—Å–ª—ã—à–∞—Ç—å –∏–º–µ–Ω–∞ –ø–æ–≥–∏–±—à–∏—Ö –∫–∞—Ä–∞–≤–∞–Ω–æ–≤."),
                "sections": []
            },
            {
                "title": "–ì–ª–∞–≤–∞ 2. –§–∏–≥—É—Ä—ã –Ω–∞ —à–∞—Ö–º–∞—Ç–Ω–æ–π –¥–æ—Å–∫–µ —Ä–∞–≤–Ω–∏–Ω",
                "text": ("–ö–ª–∞–Ω—ã —Å—Ç–µ–ø–∏ –∏–≥—Ä–∞—é—Ç –≤ –¥–æ–ª–≥—É—é –ø–∞—Ä—Ç–∏—é: —Ç–æ—Ä–≥–æ–≤—Ü—ã –≤–µ—Ç—Ä–æ–º, –∫—É–∑–Ω–µ—Ü—ã –ø–µ—Å–∫–∞, –ø–µ–≤—Ü—ã —Å–æ–ª–∏. "
                         "–ö–∞–∂–¥—ã–π –¥–≤–∏–∂–µ—Ç—Å—è –ø–æ —Å–≤–æ–∏–º –ø—Ä–∞–≤–∏–ª–∞–º, –∏ –ø–æ—Ä–æ–π –ø–µ—à–∫–∞ –≤–∞–∂–Ω–µ–µ —Ñ–µ—Ä–∑—è. "
                         "–í–µ–Ω—Ç—É—Å —Å–ª—É–∂–∏—Ç –¥–æ—Å–∫–æ–π, –≥–¥–µ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è —Ö–æ–¥—ã –∏ —Ü–µ–Ω—ã –∑–∞ –Ω–∏—Ö."),
                "sections": []
            },
            {
                "title": "–ì–ª–∞–≤–∞ 3. –ü–µ—Å–Ω—è –†–æ–∑—ã-–ö–æ–º–ø–∞—Å",
                "text": ("–†–æ–∑–∞-–ö–æ–º–ø–∞—Å ‚Äî –∞—Ä—Ç–µ—Ñ–∞–∫—Ç, —á—Ç–æ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–µ —Å–µ–≤–µ—Ä, –∞ –ø—Ä–∞–≤–¥—É. "
                         "–ï—ë –ª–µ–ø–µ—Å—Ç–∫–∏ —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞—é—Ç—Å—è –≤ —Å—Ç–æ—Ä–æ–Ω—É —Ä–µ—à–µ–Ω–∏–π, –æ—Ç –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ–ª—å–∑—è –æ—Ç—Å—Ç—É–ø–∏—Ç—å. "
                         "–ö–æ–≥–¥–∞ –ø–µ—Å–Ω—å –∑–≤—É—á–∏—Ç –≤ —à–ø–∏–ª—è—Ö, –∑–∞–º–æ–∫ –º–µ–Ω—è–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤–∫—É, –æ—Ç–∫—Ä—ã–≤–∞—è —á–µ—Å—Ç–Ω—ã–µ –ø—É—Ç–∏."),
                "sections": []
            },
            {
                "title": "–ì–ª–∞–≤–∞ 4. –ò—Å–ø—ã—Ç–∞–Ω–∏–µ –Ω–∞ –∑–∞–ø–∞–¥–Ω–æ–π –≥–∞–ª–µ—Ä–µ–µ",
                "text": ("–ö–∞–∂–¥—ã–π, –∫—Ç–æ –∂–µ–ª–∞–µ—Ç –∑–≤–∞–Ω–∏—è —Å—Ç—Ä–∞–∂–∞ –í–µ–Ω—Ç—É—Å–∞, –ø—Ä–æ—Ö–æ–¥–∏—Ç –≥–∞–ª–µ—Ä–µ—é: –º–æ—Å—Ç—ã –±–µ–∑ –ø–µ—Ä–∏–ª, –∑–∞–ª—ã —Å –ø–æ—é—â–∏–º–∏ —Ä–µ—à—ë—Ç–∫–∞–º–∏, "
                         "–∫–æ–º–Ω–∞—Ç—ã, –≥–¥–µ –∑–µ—Ä–∫–∞–ª–∞ –Ω–µ –æ—Ç—Ä–∞–∂–∞—é—Ç –ª–∂–µ—Ü–æ–≤. –ù–µ —Å–∏–ª–∞ —Ä–µ—à–∞–µ—Ç –∏—Å—Ö–æ–¥, –∞ —Å–æ–≥–ª–∞—Å–∏–µ —Å —Å–æ–±–æ–π."),
                "sections": []
            },
            {
                "title": "–ì–ª–∞–≤–∞ 5. –¢–∏—à–∏–Ω–∞ –ø–µ—Ä–µ–¥ –±—É—Ä–µ–π",
                "text": ("–ö–æ–≥–¥–∞ –±—É—Ä—è –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã —Å–æ–ª—è–Ω—ã—Ö –ø—É—Å—Ç—ã–Ω—å, –¥–∞–∂–µ –≤–µ—Ç—Ä–∞ –∑–∞–º–∏—Ä–∞—é—Ç. "
                         "–ó–∞–º–æ–∫ –∑–∞—Ç—è–≥–∏–≤–∞–µ—Ç —Å—Ç–∞–≤–Ω–∏, –∏ —Ç–æ–ª—å–∫–æ –†–æ–∑–∞-–ö–æ–º–ø–∞—Å –ø–æ—ë—Ç –≤—Å—ë –≥—Ä–æ–º—á–µ. –í —ç—Ç—É —Ç–∏—à–∏–Ω—É —á–∞—â–µ –≤—Å–µ–≥–æ –ø—Ä–∏—Ö–æ–¥—è—Ç –≤—ã–±–æ—Ä—ã: "
                         "—Å–ø–∞—Å—Ç–∏ –∫–∞—Ä–∞–≤–∞–Ω –∏–ª–∏ —É–¥–µ—Ä–∂–∞—Ç—å –º–æ—Å—Ç, —Ä–∞—Å–∫—Ä—ã—Ç—å —Ç–∞–π–Ω—É –∏–ª–∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–∞–≤–Ω–æ–≤–µ—Å–∏–µ."),
                "sections": []
            },
        ],
        "conspect": [
            "–ó–∞–º–æ–∫ –∫–∞–∫ —É–∑–µ–ª –º–∞—Ä—à—Ä—É—Ç–æ–≤ –∏ —Ä–µ—à–µ–Ω–∏–π",
            "–ö–ª–∞–Ω—ã —Å—Ç–µ–ø–∏ –∏ –∏—Ö ¬´–ø—Ä–∞–≤–∏–ª–∞ —Ö–æ–¥–∞¬ª",
            "–†–æ–∑–∞-–ö–æ–º–ø–∞—Å —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —á–µ—Å—Ç–Ω—ã–π –ø—É—Ç—å"
        ],
        "qa": []
    },
}


def _build_sample_data(cfg: Dict[str, Any]) -> Dict[str, Any]:
    chapters = cfg["chapters"]
    full_text = "\n\n".join((c.get("text") or "") for c in chapters)
    return {
        "title": cfg["title"],
        "size": cfg["size"],
        "meta": cfg["meta"],
        "chapters": chapters,
        "conspect": cfg.get("conspect", []),
        "qa": [],  # GPT –≤–º–µ—Å—Ç–æ —Å—Ç–∞—Ç–∏—á–Ω–æ–≥–æ Q&A
        "pages": _simple_pages(full_text, page_chars=1200),
    }

def ensure_samples():
    for slug, cfg in SAMPLE_DOCS.items():
        sd = os.path.join(SAMPLES_ROOT, slug)
        os.makedirs(sd, exist_ok=True)
        data_path = os.path.join(sd, "data.json")
        with open(data_path, "w", encoding="utf-8") as f:
            json.dump(_build_sample_data(cfg), f, ensure_ascii=False, indent=2)

ensure_samples()


# =========================
#  ROUTES: —Å—Ç—Ä–∞–Ω–∏—Ü–∞/—Å—ç–º–ø–ª—ã/—Ñ–∞–π–ª—ã
# =========================
@app.get("/", response_class=HTMLResponse)
def home():
    with open(os.path.join(BASE_DIR, "index.html"), "r", encoding="utf-8") as f:
        return HTMLResponse(f.read())


@app.get("/samples")
def list_samples():
    items = []
    for slug, cfg in SAMPLE_DOCS.items():
        items.append({
            "slug": slug,
            "title": cfg["title"],
            "size": cfg["size"],
            "meta": cfg["meta"],
            "json_url": f"/samples/{slug}/data.json"
        })
    return {"ok": True, "items": items}


@app.get("/samples/{slug}/data.json")
def serve_sample(slug: str):
    path = os.path.join(SAMPLES_ROOT, slug, "data.json")
    if not os.path.isfile(path):
        return JSONResponse({"error": "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"}, status_code=404)
    return FileResponse(path, media_type="application/json")


@app.get("/files/{doc_id}/{filename}")
def files(doc_id: str, filename: str):
    path = os.path.join(UPLOAD_ROOT, doc_id, filename)
    if not os.path.isfile(path):
        return JSONResponse({"error": "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"}, status_code=404)
    if filename.endswith(".json"):
        return FileResponse(path, media_type="application/json")
    return FileResponse(path)


# =========================
#  Upload
# =========================
@app.post("/upload")
async def upload(file: UploadFile = File(...)):
    name = file.filename or ""
    if not _allowed_file(name):
        return JSONResponse({"ok": False, "error": "–î–æ–ø—É—Å—Ç–∏–º—ã: PDF, EPUB, FB2, TXT"}, status_code=415)

    doc_id = str(uuid.uuid4())[:8]
    doc_dir = os.path.join(UPLOAD_ROOT, doc_id)
    os.makedirs(doc_dir, exist_ok=True)

    ext = name.rsplit(".", 1)[1].lower()
    path = os.path.join(doc_dir, name)
    raw_bytes = await file.read()
    with open(path, "wb") as out:
        out.write(raw_bytes)

    try:
        chapters: List[Dict[str, Any]] = []
        if ext == "pdf":
            if not fitz:
                raise RuntimeError("PyMuPDF –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (pip install pymupdf)")
            chunks = _pdf_to_text_chunks(path, max_chars=16000)[:CHUNK_LIMIT]
            for idx, ch in enumerate(chunks, 1):
                chapters.append({"title": f"–§—Ä–∞–≥–º–µ–Ω—Ç {idx}", "text": ch, "sections": []})
        else:
            text = raw_bytes.decode("utf-8", errors="ignore")
            # –¥–µ–ª–∏–º –ø–æ–ø–æ–ª–∞–º = 2 —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∞
            half = max(1, len(text)//5)
            chapters = [
                {"title": "–ß–∞—Å—Ç—å 1", "text": text[:half], "sections": []},
                {"title": "–ß–∞—Å—Ç—å 2", "text": text[half:], "sections": []},
            ]

        full_text = "\n\n".join((c.get("text") or "") for c in chapters)
        data = {
            "title": name,
            "size": f"{round(len(raw_bytes)/1024/1024,2)} MB",
            "meta": f"–∑–∞–≥—Ä—É–∂–µ–Ω–æ ‚Ä¢ {len(chapters)} –≥–ª–∞–≤—ã",
            "chapters": chapters,
            "conspect": [],  # GPT-–≤–∫–ª–∞–¥–∫–∞ –≤–º–µ—Å—Ç–æ —Å—Ç–∞—Ç–∏—á–Ω–æ–≥–æ Q&A
            "qa": [],
            "pages": _simple_pages(full_text, page_chars=1200),
            "doc_id": doc_id,
        }

        out_json = os.path.join(doc_dir, "data.json")
        with open(out_json, "w", encoding="utf-8") as f:
            json.dump(data, f, ensure_ascii=False, indent=2)

    except Exception as e:
        return JSONResponse({"ok": False, "error": "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç", "details": redact(str(e)), "trace_id": doc_id}, status_code=500)

    return JSONResponse({
        "ok": True,
        "doc_id": doc_id,
        "filename": name,
        "json_url": f"/files/{doc_id}/data.json",
        "chapters_count": len(data.get("chapters", []))
    })


# =========================
#  –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–≥—Ä—ã
# =========================
@app.post("/generate")
async def generate_game(payload: Dict[str, Any]):
    trace_id = str(uuid.uuid4())[:8]
    book_text = (payload.get("text") or "").strip()
    if not book_text:
        return JSONResponse({"error": "–¢–µ–∫—Å—Ç –ø—É—Å—Ç–æ–π", "trace_id": trace_id}, status_code=400)

    prompt = build_prompt(book_text, payload)
    try:
        async with httpx.AsyncClient(timeout=_request_timeout()) as client:
            r = await client.post(API_URL, headers=HEADERS, json={"messages":[{"role":"user","content":prompt}],"model":"solver"})
    except httpx.TimeoutException as e:
        return JSONResponse({"error":"–í–Ω–µ—à–Ω–∏–π API –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª –≤–æ–≤—Ä–µ–º—è","details":redact(str(e)),"trace_id":trace_id,"source":"external_api"}, status_code=504)
    except httpx.HTTPError as e:
        return JSONResponse({"error":"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ –≤–Ω–µ—à–Ω–µ–º—É API","details":redact(str(e)),"trace_id":trace_id,"source":"external_api"}, status_code=502)

    text = r.text
    if r.status_code//100 != 2:
        return JSONResponse({"error":"–í–Ω–µ—à–Ω–∏–π API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É","status":r.status_code,"details":redact(text),"trace_id":trace_id,"source":"external_api"}, status_code=502)

    try:
        data = r.json()
        game_code = data["choices"][0]["message"]["content"]
        if not game_code or "<html" not in game_code.lower():
            raise ValueError("–û—Ç–≤–µ—Ç –Ω–µ –ø–æ—Ö–æ–∂ –Ω–∞ HTML –∏–≥—Ä—ã")
        return JSONResponse({"code": game_code, "trace_id": trace_id})
    except Exception as e:
        return JSONResponse({"error":"–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å –æ—Ç–≤–µ—Ç –≤–Ω–µ—à–Ω–µ–≥–æ API","details":redact(text) or redact(str(e)),"trace_id":trace_id,"source":"parsing"}, status_code=500)


# =========================
#  GPT-—á–∞—Ç –ø–æ –∫–Ω–∏–≥–µ
# =========================
_WORD_RE = re.compile(r"[A-Za-z–ê-–Ø–∞-—è–Å—ë0-9]+")

def _tokenize(s: str) -> List[str]:
    return [w.lower() for w in _WORD_RE.findall(s or "")]

def _score(text: str, query_words: List[str]) -> int:
    if not text: return 0
    words = _tokenize(text)
    # –ø—Ä–æ—Å—Ç–∞—è –º–µ—Ç—Ä–∏–∫–∞: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–π (—É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ç–µ—Ä–º—ã)
    ws = set(words)
    return sum(1 for q in set(query_words) if q in ws)

def _select_context(doc: Dict[str, Any], question: str, max_chars: int = 6000) -> Tuple[str, List[str]]:
    """–í–µ—Ä–Ω—ë–º —Å–ª–∏—Ç—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–π –≥–ª–∞–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ø–∞–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç."""
    chapters = doc.get("chapters") or []
    qwords = _tokenize(question)
    scored = []
    for ch in chapters:
        text = ch.get("text") or ""
        scored.append(( _score(text, qwords), ch.get("title") or "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è", text ))
    # –æ—Ç–±–∏—Ä–∞–µ–º —Ç–æ–ø-2 —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö (–∏–ª–∏ –ø–µ—Ä–≤—ã–µ 2, –µ—Å–ª–∏ –Ω—É–ª–∏)
    scored.sort(key=lambda t: t[0], reverse=True)
    picked = scored[:2] if scored else []
    if not picked and chapters:
        picked = [(0, chapters[0].get("title","–ì–ª–∞–≤–∞ 1"), chapters[0].get("text",""))]
    used_titles = [t[1] for t in picked]
    buf, size = [], 0
    for _, title, text in picked:
        chunk = f"### {title}\n{text.strip()}\n"
        if size + len(chunk) > max_chars: break
        buf.append(chunk); size += len(chunk)
    if not buf and chapters:
        # –∫—Ä–∞–π–Ω–∏–π —Å–ª—É—á–∞–π ‚Äî —Ö–æ—Ç—è –±—ã –ø–µ—Ä–≤–∞—è –≥–ª–∞–≤–∞
        buf.append(f"### {chapters[0].get('title','–ì–ª–∞–≤–∞ 1')}\n{chapters[0].get('text','')}\n")
    return "\n".join(buf)[:max_chars], used_titles

@app.post("/chat")
async def chat_qa(payload: Dict[str, Any]):
    """
    –ü—Ä–∏–Ω–∏–º–∞–µ–º:
      {
        "question": "...",
        "history": [{"role":"user"|"assistant","content":"..."}],
        "doc": {"title":"...", "chapters":[{"title":"...","text":"..."}], "pages":[...]}
      }
    """
    trace_id = str(uuid.uuid4())[:8]
    question = (payload.get("question") or "").strip()
    history = payload.get("history") or []
    doc = payload.get("doc") or {}
    if not question:
        return JSONResponse({"error":"–í–æ–ø—Ä–æ—Å –ø—É—Å—Ç–æ–π","trace_id":trace_id}, status_code=400)

    context, used = _select_context(doc, question, max_chars=6000)
    sys_main = {
        "role": "system",
        "content": (
            "–¢—ã ‚Äî –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –∫–Ω–∏–≥–µ. –û—Ç–≤–µ—á–∞–π –ø–æ-—Ä—É—Å—Å–∫–∏, –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É. "
            "–û—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–∏–≤–µ–¥—ë–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞. "
            "–ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, —á–µ—Å—Ç–Ω–æ —Å–∫–∞–∂–∏, —á–µ–≥–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç."
        )
    }
    sys_ctx = {
        "role": "system",
        "content": f"–ö–æ–Ω—Ç–µ–∫—Å—Ç –∫–Ω–∏–≥–∏ (—Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã):\n---\n{context}\n---\n–û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –ø–æ —ç—Ç–æ–º—É –∫–æ–Ω—Ç–µ–∫—Å—Ç—É."
    }

    # –æ–≥—Ä–∞–Ω–∏—á–∏–º –∏—Å—Ç–æ—Ä–∏—é –¥–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 6 —Å–æ–æ–±—â–µ–Ω–∏–π
    safe_hist = []
    for m in history[-6:]:
        if m and m.get("role") in {"user", "assistant"} and isinstance(m.get("content"), str):
            safe_hist.append({"role": m["role"], "content": m["content"]})

    messages = [sys_main, sys_ctx] + safe_hist + [{"role":"user","content":question}]
    req = {"model":"solver", "messages": messages, "temperature": 0.2, "max_tokens": 700}

    try:
        async with httpx.AsyncClient(timeout=_request_timeout()) as client:
            r = await client.post(API_URL, headers=HEADERS, json=req)
    except httpx.TimeoutException as e:
        return JSONResponse({"error":"–í–Ω–µ—à–Ω–∏–π API –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª –≤–æ–≤—Ä–µ–º—è","details":redact(str(e)),"trace_id":trace_id}, status_code=504)
    except httpx.HTTPError as e:
        return JSONResponse({"error":"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ –≤–Ω–µ—à–Ω–µ–º—É API","details":redact(str(e)),"trace_id":trace_id}, status_code=502)

    text = r.text
    if r.status_code//100 != 2:
        return JSONResponse({"error":"–í–Ω–µ—à–Ω–∏–π API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É","status":r.status_code,"details":redact(text),"trace_id":trace_id}, status_code=502)

    try:
        data = r.json()
        answer = data["choices"][0]["message"]["content"]
        return JSONResponse({"answer": answer, "used": used, "trace_id": trace_id})
    except Exception as e:
        return JSONResponse({"error":"–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å –æ—Ç–≤–µ—Ç –≤–Ω–µ—à–Ω–µ–≥–æ API","details":redact(text) or redact(str(e)),"trace_id":trace_id,"source":"parsing"}, status_code=500)


# =========================
#  Global error
# =========================
@app.exception_handler(Exception)
async def on_unhandled(request: Request, exc: Exception):
    trace_id = str(uuid.uuid4())[:8]
    return JSONResponse({"error":"–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞","details":redact(str(exc)),"trace_id":trace_id,"source":"backend"}, status_code=500)


if __name__ == "__main__":
    import uvicorn
    uvicorn.run("app:app", host=os.getenv("HOST","127.0.0.1"), port=int(os.getenv("PORT","5000")), reload=True)
