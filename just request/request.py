import requests

url = "https://approxination.com/v1/chat/completions"
headers = {
    "Content-Type": "application/json",
    "Authorization": "Bearer 379f5469-cb64-47ec-bab1-462ee3824c1b"
}

prompt = """
Ты — генератор 2D-игр на JavaScript с HTML5 Canvas. 
Я дам тебе текст из книги (главу или отрывок). Твоя задача:

1. Создать интерактивную 2D-игру, которая помогает игроку понять суть текста. 
   - Игровой процесс полностью формируется по контексту текста.
   - Это может быть визуализация идей, мини-игра для запоминания событий, логическая задача, кликер и т.д.
2. В игре должен быть:
   - Какой-то способ взаимодействия (клик, движение объектов, выбор вариантов и т.п.), который отражает текст.
   - Счет или прогресс (например, очки за правильные действия, сбор идей, достижение целей текста).
   - Явный конец игры, после которого игрок понимает ключевую идею или сюжет текста.
3. Код должен быть в чистом JS + HTML + Canvas, чтобы его можно было сохранить как `game.html` и запустить в браузере.
4. Игровой сюжет и механика должны прямо ссылаться на события, идеи или персонажей текста.
5. Комментарии в коде полезны для связи с текстом, но не обязательны.
6. Формат экрана игры должен быть 1 к 1
7. ОБЯЗАТЕЛЬНО Если будет текст, следи чтобы он вмещался в пространство где он должен быть, чтобы все было красиво и дизайн хороший делай
8. Много кода, от 1000 строк кода.
9. Анимации тоже можешь добавлять разные.
10. В интерфейсе игры обязательно:
    - Счет
    - Кнопка стоп
    - Кнопка выхода
    - Подсказки
    - В окне завершения игры окончательный счет и кнопка нажать видео
    - Остальное относительно контекста

Текст из книги (глава/отрывок):  
________________________________________________________

________________________________________________________


Сделай игру, которая помогает понять этот текст.

Верни мне чистый код html без ничего лишнего

"""
# Пример вопроса для модели
data = {
    "messages": [
        {"role": "user", "content": prompt}
    ],
    "model": "solver"
}

response = requests.post(url, headers=headers, json=data)

# Проверяем, что сервер вернул JSON
try:
    result = response.json()
    # Берём текст ответа модели
    answer = result['choices'][0]['message']['content']
    with open("game.html", "w") as f:
        print(answer, file=f)
except Exception:
    print("Ошибка или неверный ответ сервера:")
    print(response.text)
